# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule AdyenRecurringAPI.Api.General do
  @moduledoc """
  API calls for all endpoints tagged `General`.
  """

  alias AdyenRecurringAPI.Connection
  import AdyenRecurringAPI.RequestBuilder


  @doc """
  post-disable
  Disables stored payment details to stop charging a shopper with this particular recurring detail ID.  For more information, refer to [Disable stored details](https://docs.adyen.com/classic-integration/recurring-payments/disable-stored-details/).

  ## Parameters

  - connection (AdyenRecurringAPI.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :body (DisableRequest): 
  ## Returns

  {:ok, AdyenRecurringAPI.Model.DisableResult.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec post_disable(Tesla.Env.client, keyword()) :: {:ok, AdyenRecurringAPI.Model.ServiceError.t} | {:ok, AdyenRecurringAPI.Model.DisableResult.t} | {:error, Tesla.Env.t}
  def post_disable(connection, opts \\ []) do
    optional_params = %{
      :body => :body
    }
    %{}
    |> method(:post)
    |> url("/disable")
    |> add_optional_params(optional_params, opts)
    |> ensure_body()
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %AdyenRecurringAPI.Model.DisableResult{}},
      { 400, %AdyenRecurringAPI.Model.ServiceError{}},
      { 401, %AdyenRecurringAPI.Model.ServiceError{}},
      { 403, %AdyenRecurringAPI.Model.ServiceError{}},
      { 422, %AdyenRecurringAPI.Model.ServiceError{}},
      { 500, %AdyenRecurringAPI.Model.ServiceError{}}
    ])
  end

  @doc """
  post-listRecurringDetails
  Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.  For more information, refer to [Retrieve stored details](https://docs.adyen.com/classic-integration/recurring-payments/retrieve-stored-details/).

  ## Parameters

  - connection (AdyenRecurringAPI.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :body (RecurringDetailsRequest): 
  ## Returns

  {:ok, AdyenRecurringAPI.Model.RecurringDetailsResult.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec post_list_recurring_details(Tesla.Env.client, keyword()) :: {:ok, AdyenRecurringAPI.Model.RecurringDetailsResult.t} | {:ok, AdyenRecurringAPI.Model.ServiceError.t} | {:error, Tesla.Env.t}
  def post_list_recurring_details(connection, opts \\ []) do
    optional_params = %{
      :body => :body
    }
    %{}
    |> method(:post)
    |> url("/listRecurringDetails")
    |> add_optional_params(optional_params, opts)
    |> ensure_body()
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %AdyenRecurringAPI.Model.RecurringDetailsResult{}},
      { 400, %AdyenRecurringAPI.Model.ServiceError{}},
      { 401, %AdyenRecurringAPI.Model.ServiceError{}},
      { 403, %AdyenRecurringAPI.Model.ServiceError{}},
      { 422, %AdyenRecurringAPI.Model.ServiceError{}},
      { 500, %AdyenRecurringAPI.Model.ServiceError{}}
    ])
  end

  @doc """
  post-scheduleAccountUpdater
  When making the API call, you can submit either the credit card information, or the recurring detail reference and the shopper reference: * If the card information is provided, all the sub-fields for `card` are mandatory. * If the recurring detail reference is provided, the fields for `shopperReference` and `selectedRecurringDetailReference` are mandatory.

  ## Parameters

  - connection (AdyenRecurringAPI.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :body (ScheduleAccountUpdaterRequest): 
  ## Returns

  {:ok, AdyenRecurringAPI.Model.ScheduleAccountUpdaterResult.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec post_schedule_account_updater(Tesla.Env.client, keyword()) :: {:ok, AdyenRecurringAPI.Model.ServiceError.t} | {:ok, AdyenRecurringAPI.Model.ScheduleAccountUpdaterResult.t} | {:error, Tesla.Env.t}
  def post_schedule_account_updater(connection, opts \\ []) do
    optional_params = %{
      :body => :body
    }
    %{}
    |> method(:post)
    |> url("/scheduleAccountUpdater")
    |> add_optional_params(optional_params, opts)
    |> ensure_body()
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %AdyenRecurringAPI.Model.ScheduleAccountUpdaterResult{}},
      { 400, %AdyenRecurringAPI.Model.ServiceError{}},
      { 401, %AdyenRecurringAPI.Model.ServiceError{}},
      { 403, %AdyenRecurringAPI.Model.ServiceError{}},
      { 422, %AdyenRecurringAPI.Model.ServiceError{}},
      { 500, %AdyenRecurringAPI.Model.ServiceError{}}
    ])
  end
end
